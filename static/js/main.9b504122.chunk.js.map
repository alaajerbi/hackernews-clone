{"version":3,"sources":["components/Navbar.js","components/TagNav.js","components/Stories.js","utils/api.js","components/App.js","serviceWorker.js","index.js"],"names":["Navbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","WAIT_INTERVAL","ENTER_KEY","state","value","handleChange","bind","assertThisInitialized","triggerChange","handleKeyDown","timer","event","target","clearTimeout","setState","setTimeout","e","keyCode","keyword","onChange","react_default","a","createElement","className","type","placeholder","aria-label","onKeyDown","href","Component","TagNav","name","query","map","tag","index","key","selectedTag","onClick","StoryList","Stories_Pagination","nbPages","page","onNextClick","onPreviousClick","stories","filter","story","url","dateFromNow","moment","created_at","fromNow","title","keywordTitlePosition","toLowerCase","search","keywordUrlPosition","newTitle","slice","length","newUrl","points","author","num_comments","Pagination","Stories","loading","Stories_StoryList","fetchStoriesFromUrl","axios","get","then","results","data","fetchStoriesByKeyword","arguments","undefined","window","encodeURI","fetchStoriesByTag","console","log","fetchFrontPageStories","App","handleSearchChange","handleTagChange","handleNextClick","handlePreviousClick","_this2","api","hits","_this3","_this4","_this5","_this6","Navbar_Navbar","Stories_Stories","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","components_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9b504122.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n\nexport default class Navbar extends Component {\n  WAIT_INTERVAL = 1000;\n  ENTER_KEY = 13;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.triggerChange = this.triggerChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n\n  }\n\n    componentWillMount() {\n      this.timer = null;\n    }\n\n  handleChange(event) {\n    let value = event.target.value;\n    clearTimeout(this.timer);\n    this.setState({ value: value });\n    this.timer = setTimeout(this.triggerChange, this.WAIT_INTERVAL);\n  }\n\n   handleKeyDown(e) {\n        if (e.keyCode === this.ENTER_KEY) {\n            this.triggerChange();\n        }\n    }\n\n    triggerChange() {\n        let keyword = this.state.value;\n\n        this.props.onChange(keyword);\n    }\n\n  render() {\n    return (\n      <nav className=\"navbar\">\n        <span className=\"navbar-brand mb-0\">HN Clone</span>\n        <div className=\"form-inline search-bar-container\">\n          <input className=\"form-control mr-sm-2 search-bar\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"\n          onChange={this.handleChange}\n          onKeyDown={this.handleKeyDown}/>\n        </div>\n        <span className=\"navbar-text\">\n          Made with love by <a href=\"https://github.com/alaajerbi\">Alaa Jerbi</a>\n        </span>\n      </nav>\n    );\n  }\n}\n","import React from 'react';\n\nexport default function TagNav(props) {\n    let tags = [\n      {\n        name: 'Front Page',\n        query: 'front_page'\n      },\n      {\n        name: 'Latest',\n        query: 'story'\n      },\n      {\n        name: 'Show',\n        query: 'show_hn'\n      }];\n    return (\n      <ul className=\"nav tag-nav\">\n        { tags.map((tag, index) => {\n          return (\n          <li key={index} className=\"nav-item\">\n            <p className={ props.selectedTag === tag.query ? 'nav-link active' : 'nav-link'}\n            onClick={ () => { props.onChange(tag.query)} }>\n              { tag.name }\n            </p>\n          </li>)\n        })}\n      </ul>\n    );\n  }","import React, { Component } from 'react';\nimport moment from 'moment';\n\n\nconst StoryList = (props) => {\n  return (\n    <div>\n    <Pagination nbPages= {props.nbPages} page={ props.page }\n    onNextClick = { props.onNextClick } onPreviousClick = { props.onPreviousClick }/>\n\n    <div className=\"list-group stories\">\n    { props.stories.filter(story => {\n      return story.url!== null;\n    })\n      .map((story, index) => {\n      let dateFromNow = moment(story.created_at).fromNow();\n      let title = story.title;\n      let url = story.url;\n      let keywordTitlePosition = title.toLowerCase().search(props.keyword.toLowerCase());\n      let keywordUrlPosition = url.toLowerCase().search(props.keyword.toLowerCase());\n      let newTitle =  keywordTitlePosition !== -1 ? (<h5 className=\"mb-1\">{ title.slice(0, keywordTitlePosition) }<span className='highlighted'>{ title.slice(keywordTitlePosition, keywordTitlePosition + props.keyword.length ) }</span>{ title.slice(keywordTitlePosition + props.keyword.length) }</h5>)\n          : (<h5 className=\"mb-1\">{ title }</h5>) ;\n      let newUrl = keywordUrlPosition !== -1 ? (<span>{ url.slice(0, keywordUrlPosition) }<span className='highlighted'>{ url.slice(keywordUrlPosition, keywordUrlPosition + props.keyword.length ) }</span>{ url.slice(keywordUrlPosition + props.keyword.length) }</span>)\n          : (<span>{ url }</span>) ;\n      return (\n      <a key={ index } href={ story.url } className=\"list-group-item list-group-item-action flex-column align-items-start\">\n        <div className=\"d-flex w-100 justify-content-between\">\n          { newTitle }\n        </div>\n        <small>Points: { story.points } | {story.author} | {dateFromNow} | {story.num_comments} comments | ({ newUrl })</small>\n      </a>\n      );\n    })}\n      \n    </div>\n    </div>\n    )\n}\n\nconst Pagination = (props) => {\n  return (\n    <div className=\"clearfix mb-1\">\n    { props.nbPages > 1 && props.page < props.nbPages && <button className=\"btn float-right\" onClick={ props.onNextClick }>Next &raquo; </button>\n    } \n    { props.page > 0  && <button className=\"btn float-left\" onClick={ props.onPreviousClick }>&laquo; Previous</button>}\n    </div>\n  )\n}\n\nexport default class Stories extends Component {\n  \n  render() {\n    return (\n      <div>\n      { (this.props.loading && <p>Loading...</p>) ||\n        (this.props.stories.length === 0 && <p>No results</p>) ||\n        (this.props.stories && <StoryList stories={this.props.stories} keyword={ this.props.keyword }\n          page= {this.props.page} nbPages={ this.props.nbPages }\n          onNextClick= { this.props.onNextClick }\n          onPreviousClick = {this.props.onPreviousClick }/>) }\n      </div>\n    );\n  }\n}\n","import axios from 'axios';\n\nfunction fetchStoriesFromUrl(url) {\n  return axios.get(url)\n  .then(results => {\n    return results.data;\n  });\n}\n\n//fetch stories by keyword\nexport function fetchStoriesByKeyword(keyword, page = 0) {\n  const url = window.encodeURI('https://hn.algolia.com/api/v1/search?query=' + keyword + '&tags=story&page=' + page + '&hitsPerPage=50');\n  return fetchStoriesFromUrl(url);\n}\n\nfunction fetchFrontPageStories(page = 0) {\n  const url = window.encodeURI('https://hn.algolia.com/api/v1/search?tags=front_page&page=' + page + '&hitsPerPage=50');\n  return fetchStoriesFromUrl(url);\n}\n\n//fetch stories by tag\nexport function fetchStoriesByTag(tag, page = 0) {\n  console.log(page);\n  if (tag === 'front_page') {\n    return fetchFrontPageStories(page);\n  }\n  const url = window.encodeURI('https://hn.algolia.com/api/v1/search_by_date?tags=' + tag + '&page=' + page + '&hitsPerPage=50');\n  return fetchStoriesFromUrl(url);\n}","import React, { Component } from 'react';\nimport Navbar from './Navbar.js';\nimport TagNav from './TagNav.js';\nimport Stories from './Stories.js';\nimport * as api from '../utils/api.js';\n\nclass App extends Component {\n\n  state = {\n    stories: null,\n    loading: true,\n    keyword: '',\n    tag: 'front_page',\n    page: 0,\n    nbPages: null\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleTagChange = this.handleTagChange.bind(this);\n    this.handleNextClick = this.handleNextClick.bind(this);\n    this.handlePreviousClick = this.handlePreviousClick.bind(this);\n  }\n\n  componentDidMount() {\n    const tag = this.state.tag;\n    const page = this.state.page;\n\n    //get the front page stories upon mounting\n    api.fetchStoriesByTag(tag, page)\n    .then(data => {\n      console.log(data);\n      this.setState({\n        stories: data.hits,\n        loading: false,\n        nbPages: data.nbPages\n      });\n    });\n  }\n\n  handleNextClick() {\n    let page = this.state.page;\n    const tag = this.state.tag;\n    const keyword = this.state.keyword;\n\n    this.setState({\n      page: page + 1,\n      loading: true,\n    }, () => {\n      if (keyword === \"\") {\n        api.fetchStoriesByTag(tag, this.state.page)\n        .then(data => {\n          this.setState({\n            stories: data.hits,\n            loading: false,\n            nbPages: data.nbPages,\n          })\n        });\n      }\n      else {\n        api.fetchStoriesByKeyword(keyword, this.state.page)\n        .then(data => {\n          this.setState({\n            stories: data.hits,\n            loading: false,\n            keyword: keyword,\n            nbPages: data.nbPages\n          });\n        });\n      }\n      \n    });\n  }\n\n  handlePreviousClick() {\n    const page = this.state.page;\n    const tag = this.state.tag;\n    const keyword = this.state.keyword;\n    \n    this.setState({\n      page: page - 1,\n      loading: true,\n    }, () => {\n      if (keyword === \"\") {\n        api.fetchStoriesByTag(tag, this.state.page)\n        .then(data => {\n          this.setState({\n            stories: data.hits,\n            loading: false,\n            nbPages: data.nbPages,\n          })\n        });\n      }\n      else {\n        api.fetchStoriesByKeyword(keyword, this.state.page)\n        .then(data => {\n          this.setState({\n            stories: data.hits,\n            loading: false,\n            keyword: keyword,\n            nbPages: data.nbPages\n          });\n        });\n      }\n    });\n\n    \n  }\n\n  handleSearchChange(keyword) {\n     //set the stories to null and loading to true before we do any fetching\n     this.setState({\n        stories: null,\n        loading: true,\n      });\n\n    if( keyword === \"\") {\n      //save the tag query to restore the previous stories in case the keyword is empty\n      const tag = this.state.tag;\n      const page = this.state.page;\n      //restore results of the last tag query\n      api.fetchStoriesByTag(tag)\n      .then(data => {\n        this.setState({\n          stories: data.hits,\n          loading: false,\n          keyword: '',\n          page: page,\n          nbPages: data.nbPages\n        })\n      });\n    }\n    else {\n        api.fetchStoriesByKeyword(keyword)\n        .then(data => {\n        this.setState({\n          stories: data.hits,\n          loading: false,\n          keyword: keyword,\n          page: 0,\n          nbPages: data.nbPages\n        });\n      })\n    }\n  }\n\n  handleTagChange(tag) {\n    this.setState({\n        stories: null,\n        loading: true,\n        keyword: '',\n        tag: tag,\n        page: 0\n        });\n\n    api.fetchStoriesByTag(tag)\n    .then(data => {\n      this.setState({\n        stories: data.hits,\n        loading: false,\n        nbPages: data.nbPages,\n      })\n    });\n  }\n\n\n\n  render() {\n    let stories = this.state.stories;\n    let loading = this.state.loading;\n    let keyword = this.state.keyword;\n    return (\n      <div className=\"container\">\n        <Navbar onChange={this.handleSearchChange}/>\n        <TagNav selectedTag={ this.state.tag }\n        onChange={ this.handleTagChange }/>\n        <Stories loading={ loading }\n        stories={ stories }\n        keyword={ keyword }\n        page={this.state.page}\n        nbPages={ this.state.nbPages }\n        onNextClick= { this.handleNextClick }\n        onPreviousClick= { this.handlePreviousClick }/>\n      </div>\n      \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}